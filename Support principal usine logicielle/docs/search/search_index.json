{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mise en place de l\u2019Usine Logicielle # Connaissances prealables # Des connaissances en administration Linux sont demand\u00e9es Objectifs # Conna\u00eetre les diff\u00e9rents composants d\u2019une plateforme Usine Logicielle Comprendre les enjeux d\u2019une plateforme Usine Logicielle Etre capable de faire des choix d\u2019architecture pour mettre en place une Usine Logicielle compl\u00e8te Contenu du cours # Qu'est ce qu'une plate-forme d'Usine Logicielle # Pr\u00e9sentation Etude de vie du logiciel : conception, d\u00e9veloppement, recettage, mise en production Int\u00e9gration continue : d\u00e9finition, m\u00e9thodes, b\u00e9n\u00e9fices et bonnes pratiques Concepts et enjeux # Les diff\u00e9rents types d\u2019outils et les fonctionnalit\u00e9s couvertes Potentiel et limites des outils Interaction entre les diff\u00e9rents outils Versioning Collaboratif R\u00e9daction de documentation technique Mise en oeuvre # Etude de chaque composant Mise en place de la containerisation Prise en main d'outils individuels Prise en main d'outils integr\u00e9s Gestion de projet # Prise en compte des contraintes et besoins Conception de la plateforme et choix des outils Recettage : test de non-r\u00e9gression et test de validation Risques d\u2019un projet de migration Bonnes pratiques","title":"Mise en place de l\u2019Usine Logicielle"},{"location":"#mise-en-place-de-lusine-logicielle","text":"","title":"Mise en place de l\u2019Usine Logicielle"},{"location":"#connaissances-prealables","text":"Des connaissances en administration Linux sont demand\u00e9es","title":"Connaissances prealables"},{"location":"#objectifs","text":"Conna\u00eetre les diff\u00e9rents composants d\u2019une plateforme Usine Logicielle Comprendre les enjeux d\u2019une plateforme Usine Logicielle Etre capable de faire des choix d\u2019architecture pour mettre en place une Usine Logicielle compl\u00e8te","title":"Objectifs"},{"location":"#contenu-du-cours","text":"","title":"Contenu du cours"},{"location":"#quest-ce-quune-plate-forme-dusine-logicielle","text":"Pr\u00e9sentation Etude de vie du logiciel : conception, d\u00e9veloppement, recettage, mise en production Int\u00e9gration continue : d\u00e9finition, m\u00e9thodes, b\u00e9n\u00e9fices et bonnes pratiques","title":"Qu'est ce qu'une plate-forme d'Usine Logicielle"},{"location":"#concepts-et-enjeux","text":"Les diff\u00e9rents types d\u2019outils et les fonctionnalit\u00e9s couvertes Potentiel et limites des outils Interaction entre les diff\u00e9rents outils Versioning Collaboratif R\u00e9daction de documentation technique","title":"Concepts et enjeux"},{"location":"#mise-en-oeuvre","text":"Etude de chaque composant Mise en place de la containerisation Prise en main d'outils individuels Prise en main d'outils integr\u00e9s","title":"Mise en oeuvre"},{"location":"#gestion-de-projet","text":"Prise en compte des contraintes et besoins Conception de la plateforme et choix des outils Recettage : test de non-r\u00e9gression et test de validation Risques d\u2019un projet de migration Bonnes pratiques","title":"Gestion de projet"},{"location":"010-context/","text":"Contexte #","title":"Contexte"},{"location":"010-context/#contexte","text":"","title":"Contexte"},{"location":"010-context/010-software-lifecycle/","text":"Cycles de vie des projets # Rappels # Gestion de projet # La gestion de projet vise \u00e0 ma\u00eetriser : Les risques Les d\u00e9lais, les co\u00fbts La qualit\u00e9 Qu'est-ce qu'un cycle de vie ? D\u00e9coupage en un ensemble de processus Un processus : objectif, \u00e9tapes, entr\u00e9e/sortie Phases d'un projet # Tout projet est constitu\u00e9 de 6 phases distinctes Analyse et sp\u00e9cification ( initiating ) Conception ( planning ) R\u00e9alisation ( implementing ) Test ( monitoring ) Mise en production ( closure ) Maintenance ( adapting ) Phase I : Analyse et sp\u00e9cification # Description du dossier qualit\u00e9 R\u00e9alisation du cahier des charges fonctionnel Phase II : Conception # D\u00e9finition de l'architecture du logiciel (globale) D\u00e9coupage en modules (d\u00e9taill\u00e9e) R\u00e9alisation du cahier des charges technique Phase III : R\u00e9alisation # D\u00e9veloppement logiciel Codage des modules \u00c9criture des tests unitaires Phase IV : Tests # Tests Int\u00e9gration Validation Qualification technique et fonctionnelle Phase V : Mise en production # Validation en environnement r\u00e9el Correction des anomalies r\u00e9siduelles V\u00e9rification du respect du contrat de service Phase VI : Maintenance et adaptation # Mini-cycles de projets incluant les 5 autres phases Effort aux diff\u00e9rentes phases # Un peu d'humour # Diff\u00e9rents mod\u00e8les de projets # Selon la fa\u00e7on d'avancer sur le projet # Mod\u00e8les s\u00e9quentiels (cascade, cycle en V) Un seul trajet, une seule s\u00e9quence Un seul gros livrable Mod\u00e8les incr\u00e9mentaux (prototypage, spirale) Plusieurs \u00e9tapes \u00c0 chaque incr\u00e9ment, un produit partiel est livr\u00e9 On \u00e9largit le p\u00e9rim\u00e8tre quand l'\u00e9tape pr\u00e9c\u00e9dente est r\u00e9ussie Mod\u00e8les it\u00e9ratifs (agile, scrum) Plusieurs it\u00e9rations des diff\u00e9rentes phases \u00c0 chaque it\u00e9ration un produit utilisable est livr\u00e9 Mod\u00e8le en cascade : Origines # M\u00e9thodologie s\u00e9quentielle Mod\u00e8le classique (Bohem 1988) Base et r\u00e9f\u00e9rence des autres mod\u00e8les H\u00e9rit\u00e9 de l'industrie du BTP Les cons\u00e9quences d'une modification amont on un impact majeur sur les co\u00fbts en aval Mod\u00e8le en cascade : Caract\u00e9ristiques # Chaque phase de ce mod\u00e8le ont pour caract\u00e9ristique : Est d\u00e9finie au pr\u00e9alable (d\u00e9veloppement modulaire) Doit \u00eatre finie pour que la suivante commence Se termine... ... \u00e0 date pr\u00e9cise ... seulement lorsque les livrables sont jug\u00e9s satisfaisants ... apr\u00e8s une \u00e9tape de validation-v\u00e9rification \u00c0 l'origine, il n'y avait pas de retour arri\u00e8re, mais apr\u00e8s apr\u00e8s \u00e9volution du mod\u00e8le, une \u00e9tape ne remet en cause que l'\u00e9tape pr\u00e9c\u00e9dente Mod\u00e8le en cascade : Illustration # Diff\u00e9rents mod\u00e8les de projets # Cycle en V # Origine # \u00c9volution du mod\u00e8le en cascade (s\u00e9quentiel) Plus r\u00e9actif que le mod\u00e8le en cascade Limite le retour aux \u00e9tapes pr\u00e9c\u00e9dentes Met en \u00e9vidence la n\u00e9cessit\u00e9 d'anticiper Dans les \u00e9tapes descendantes on a les \"attendus\" des futures \u00e9tapes montantes Standard de l'industrie du d\u00e9veloppement logiciel et de la gestion de projet depuis les ann\u00e9es 1980 Illustration # Avantages # Permet de discipliner le processus de d\u00e9veloppement Fait apparaitre des points de contr\u00f4le Notion de validation forte Base des cycles suivants Inconv\u00e9nients # Rigidit\u00e9 des phases lin\u00e9aires Industrie manufacturi\u00e8re \u2260 cr\u00e9ativit\u00e9 Projet monolithique : un produit global livr\u00e9 en bloc Effet \u00ab tunnel \u00bb Estimation du co\u00fbt difficile \u00e0faire Difficult\u00e9 d'anticiper et d'int\u00e9grer les changements Prototypage # Origine # Issu de la recherche (prototypage exp\u00e9rimental) Utilis\u00e9 au niveau de la conception pour : S'assurer de la faisabilit\u00e9 de parties critiques Valider des options de conception Souvent jet\u00e9 apr\u00e8s d\u00e9veloppement Illustration # Usage # Prototypage \u00e9volutif La premi\u00e8re version du prototype: embryon D\u00e9veloppement par incr\u00e9ment Chaque prototype fait l'objet d'un cycle sp\u00e9cification-conception-implantation-test Mise en place de la notion de cycle incr\u00e9mental Spirale # Origine # Bas\u00e9 sur le prototypage \u00e9volutif Bas\u00e9 sur la gestion des risques Reprends les \u00e9tapes du cycle en V D\u00e9marche : Identifier les risques et commencer par les plus importants Chaque cycle peut est bas\u00e9 sur une d\u00e9marche en V ou en cascade Avantages # Meilleure ma\u00eetrise des risques Les utilisateurs acceptent progressivement le produit Meilleure r\u00e9activit\u00e9 Inconv\u00e9nients # Le nombre d\u2019incr\u00e9ments doit \u00eatre assez important Fonctionne bien si le projet est g\u00e9r\u00e9 en interne (quand $client = fournisseur$) M\u00e9thodes it\u00e9ratives (agile, XP, etc.) # Naissance : ann\u00e9e 2000 Mod\u00e8le it\u00e9ratif Mise en avant du r\u00f4le du d\u00e9veloppeur R\u00e9duction de la documentation Renforcement du lien client/int\u00e9grateur Valeurs # La communication Client int\u00e9gr\u00e9 dans le projet, groupe soud\u00e9 Feedback (commentaire) Travail en bin\u00f4me, \u00e9changes directs et rapides avec le client La simplicit\u00e9 Supprimer ce qui est inutile Le courage Jeter le code mauvais, le client doit donner ses priorit\u00e9s Fonctionnement # Usage de \"bonnes pratiques\" de programmation Une conception simple, du refactoring, des tests unitaires, des tests fonctionnels Des acteurs diff\u00e9renci\u00e9s Coach, manager, tracker, d\u00e9veloppeur, testeur, client R\u00e8gles Programmation en bin\u00f4me, responsabilit\u00e9 collective du code, int\u00e9gration continue Avantages # Qualit\u00e9 Maintenabilit\u00e9, Efficacit\u00e9 Adaptabilit\u00e9 Transparence Client int\u00e9gr\u00e9 Respect des objectifs Ambiance de travail Inconv\u00e9nients # Langages : adapt\u00e9s pour des langages objets Projet de petits envergures Equipe r\u00e9duite, et devant \u00eatre tr\u00e8s comp\u00e9tente et soud\u00e9e Travail en bin\u00f4me Clients omnipr\u00e9sents Variantes # La notion de besoin remplac\u00e9 par la notion de service D\u00e9coupage en Lots et en \u00eelots Reprise des valeurs et de la m\u00e9thodologie XP pour chacun de ces lots. D\u00e9coupage du projet en \u00eelots ind\u00e9pendants Lotissement # Conclusion # La n\u00e9cessit\u00e9 d'une m\u00e9thode de gestion # Il n'y a pas de bonnes ou de mauvaises m\u00e9thodes Chaque projet a ses sp\u00e9cificit\u00e9s qui conduisent \u00e0 d\u00e9finir la m\u00e9thode la plus adapt\u00e9e (ou la moins mauvaise), qui r\u00e9sulte souvent du dosage subtil de plusieurs m\u00e9thodes. \u00c9tapes parall\u00e8les / externes au projet # Le transverse # Gestion des environnements Donn\u00e9es de tests Administration des serveurs Mise en place du r\u00e9seau informatique Installation/Masterisation du parc informatique Le contr\u00f4le qualit\u00e9 Capacity planning Suivi du syst\u00e8me d\u00e9velopp\u00e9 ou en cours de d\u00e9veloppement La formation # Formation des futurs utilisateurs de l\u2019application Mise en place d\u2019un environnement de formation Adaptation du projet par rapport aux premi\u00e8res remont\u00e9s Formation des futurs administrateurs de l\u2019application Prise de connaissance de l\u2019application Formation aux nouveaux outils pouvant \u00eatre mis en place etc.","title":"Cycles de vie des projets"},{"location":"010-context/010-software-lifecycle/#cycles-de-vie-des-projets","text":"","title":"Cycles de vie des projets"},{"location":"010-context/010-software-lifecycle/#rappels","text":"","title":"Rappels"},{"location":"010-context/010-software-lifecycle/#gestion-de-projet","text":"La gestion de projet vise \u00e0 ma\u00eetriser : Les risques Les d\u00e9lais, les co\u00fbts La qualit\u00e9 Qu'est-ce qu'un cycle de vie ? D\u00e9coupage en un ensemble de processus Un processus : objectif, \u00e9tapes, entr\u00e9e/sortie","title":"Gestion de projet"},{"location":"010-context/010-software-lifecycle/#phases-dun-projet","text":"Tout projet est constitu\u00e9 de 6 phases distinctes Analyse et sp\u00e9cification ( initiating ) Conception ( planning ) R\u00e9alisation ( implementing ) Test ( monitoring ) Mise en production ( closure ) Maintenance ( adapting )","title":"Phases d'un projet"},{"location":"010-context/010-software-lifecycle/#phase-i-analyse-et-specification","text":"Description du dossier qualit\u00e9 R\u00e9alisation du cahier des charges fonctionnel","title":"Phase I : Analyse et sp\u00e9cification"},{"location":"010-context/010-software-lifecycle/#phase-ii-conception","text":"D\u00e9finition de l'architecture du logiciel (globale) D\u00e9coupage en modules (d\u00e9taill\u00e9e) R\u00e9alisation du cahier des charges technique","title":"Phase II : Conception"},{"location":"010-context/010-software-lifecycle/#phase-iii-realisation","text":"D\u00e9veloppement logiciel Codage des modules \u00c9criture des tests unitaires","title":"Phase III : R\u00e9alisation"},{"location":"010-context/010-software-lifecycle/#phase-iv-tests","text":"Tests Int\u00e9gration Validation Qualification technique et fonctionnelle","title":"Phase IV : Tests"},{"location":"010-context/010-software-lifecycle/#phase-v-mise-en-production","text":"Validation en environnement r\u00e9el Correction des anomalies r\u00e9siduelles V\u00e9rification du respect du contrat de service","title":"Phase V : Mise en production"},{"location":"010-context/010-software-lifecycle/#phase-vi-maintenance-et-adaptation","text":"Mini-cycles de projets incluant les 5 autres phases","title":"Phase VI : Maintenance et adaptation"},{"location":"010-context/010-software-lifecycle/#effort-aux-differentes-phases","text":"","title":"Effort aux diff\u00e9rentes phases"},{"location":"010-context/010-software-lifecycle/#un-peu-dhumour","text":"","title":"Un peu d'humour"},{"location":"010-context/010-software-lifecycle/#differents-modeles-de-projets","text":"","title":"Diff\u00e9rents mod\u00e8les de projets"},{"location":"010-context/010-software-lifecycle/#selon-la-facon-davancer-sur-le-projet","text":"Mod\u00e8les s\u00e9quentiels (cascade, cycle en V) Un seul trajet, une seule s\u00e9quence Un seul gros livrable Mod\u00e8les incr\u00e9mentaux (prototypage, spirale) Plusieurs \u00e9tapes \u00c0 chaque incr\u00e9ment, un produit partiel est livr\u00e9 On \u00e9largit le p\u00e9rim\u00e8tre quand l'\u00e9tape pr\u00e9c\u00e9dente est r\u00e9ussie Mod\u00e8les it\u00e9ratifs (agile, scrum) Plusieurs it\u00e9rations des diff\u00e9rentes phases \u00c0 chaque it\u00e9ration un produit utilisable est livr\u00e9","title":"Selon la fa\u00e7on d'avancer sur le projet"},{"location":"010-context/010-software-lifecycle/#modele-en-cascade-origines","text":"M\u00e9thodologie s\u00e9quentielle Mod\u00e8le classique (Bohem 1988) Base et r\u00e9f\u00e9rence des autres mod\u00e8les H\u00e9rit\u00e9 de l'industrie du BTP Les cons\u00e9quences d'une modification amont on un impact majeur sur les co\u00fbts en aval","title":"Mod\u00e8le en cascade : Origines"},{"location":"010-context/010-software-lifecycle/#modele-en-cascade-caracteristiques","text":"Chaque phase de ce mod\u00e8le ont pour caract\u00e9ristique : Est d\u00e9finie au pr\u00e9alable (d\u00e9veloppement modulaire) Doit \u00eatre finie pour que la suivante commence Se termine... ... \u00e0 date pr\u00e9cise ... seulement lorsque les livrables sont jug\u00e9s satisfaisants ... apr\u00e8s une \u00e9tape de validation-v\u00e9rification \u00c0 l'origine, il n'y avait pas de retour arri\u00e8re, mais apr\u00e8s apr\u00e8s \u00e9volution du mod\u00e8le, une \u00e9tape ne remet en cause que l'\u00e9tape pr\u00e9c\u00e9dente","title":"Mod\u00e8le en cascade : Caract\u00e9ristiques"},{"location":"010-context/010-software-lifecycle/#modele-en-cascade-illustration","text":"","title":"Mod\u00e8le en cascade : Illustration"},{"location":"010-context/010-software-lifecycle/#differents-modeles-de-projets_1","text":"","title":"Diff\u00e9rents mod\u00e8les de projets"},{"location":"010-context/010-software-lifecycle/#cycle-en-v","text":"","title":"Cycle en V"},{"location":"010-context/010-software-lifecycle/#origine","text":"\u00c9volution du mod\u00e8le en cascade (s\u00e9quentiel) Plus r\u00e9actif que le mod\u00e8le en cascade Limite le retour aux \u00e9tapes pr\u00e9c\u00e9dentes Met en \u00e9vidence la n\u00e9cessit\u00e9 d'anticiper Dans les \u00e9tapes descendantes on a les \"attendus\" des futures \u00e9tapes montantes Standard de l'industrie du d\u00e9veloppement logiciel et de la gestion de projet depuis les ann\u00e9es 1980","title":"Origine"},{"location":"010-context/010-software-lifecycle/#illustration","text":"","title":"Illustration"},{"location":"010-context/010-software-lifecycle/#avantages","text":"Permet de discipliner le processus de d\u00e9veloppement Fait apparaitre des points de contr\u00f4le Notion de validation forte Base des cycles suivants","title":"Avantages"},{"location":"010-context/010-software-lifecycle/#inconvenients","text":"Rigidit\u00e9 des phases lin\u00e9aires Industrie manufacturi\u00e8re \u2260 cr\u00e9ativit\u00e9 Projet monolithique : un produit global livr\u00e9 en bloc Effet \u00ab tunnel \u00bb Estimation du co\u00fbt difficile \u00e0faire Difficult\u00e9 d'anticiper et d'int\u00e9grer les changements","title":"Inconv\u00e9nients"},{"location":"010-context/010-software-lifecycle/#prototypage","text":"","title":"Prototypage"},{"location":"010-context/010-software-lifecycle/#origine_1","text":"Issu de la recherche (prototypage exp\u00e9rimental) Utilis\u00e9 au niveau de la conception pour : S'assurer de la faisabilit\u00e9 de parties critiques Valider des options de conception Souvent jet\u00e9 apr\u00e8s d\u00e9veloppement","title":"Origine"},{"location":"010-context/010-software-lifecycle/#illustration_1","text":"","title":"Illustration"},{"location":"010-context/010-software-lifecycle/#usage","text":"Prototypage \u00e9volutif La premi\u00e8re version du prototype: embryon D\u00e9veloppement par incr\u00e9ment Chaque prototype fait l'objet d'un cycle sp\u00e9cification-conception-implantation-test Mise en place de la notion de cycle incr\u00e9mental","title":"Usage"},{"location":"010-context/010-software-lifecycle/#spirale","text":"","title":"Spirale"},{"location":"010-context/010-software-lifecycle/#origine_2","text":"Bas\u00e9 sur le prototypage \u00e9volutif Bas\u00e9 sur la gestion des risques Reprends les \u00e9tapes du cycle en V D\u00e9marche : Identifier les risques et commencer par les plus importants Chaque cycle peut est bas\u00e9 sur une d\u00e9marche en V ou en cascade","title":"Origine"},{"location":"010-context/010-software-lifecycle/#avantages_1","text":"Meilleure ma\u00eetrise des risques Les utilisateurs acceptent progressivement le produit Meilleure r\u00e9activit\u00e9","title":"Avantages"},{"location":"010-context/010-software-lifecycle/#inconvenients_1","text":"Le nombre d\u2019incr\u00e9ments doit \u00eatre assez important Fonctionne bien si le projet est g\u00e9r\u00e9 en interne (quand $client = fournisseur$)","title":"Inconv\u00e9nients"},{"location":"010-context/010-software-lifecycle/#methodes-iteratives-agile-xp-etc","text":"Naissance : ann\u00e9e 2000 Mod\u00e8le it\u00e9ratif Mise en avant du r\u00f4le du d\u00e9veloppeur R\u00e9duction de la documentation Renforcement du lien client/int\u00e9grateur","title":"M\u00e9thodes it\u00e9ratives (agile, XP, etc.)"},{"location":"010-context/010-software-lifecycle/#valeurs","text":"La communication Client int\u00e9gr\u00e9 dans le projet, groupe soud\u00e9 Feedback (commentaire) Travail en bin\u00f4me, \u00e9changes directs et rapides avec le client La simplicit\u00e9 Supprimer ce qui est inutile Le courage Jeter le code mauvais, le client doit donner ses priorit\u00e9s","title":"Valeurs"},{"location":"010-context/010-software-lifecycle/#fonctionnement","text":"Usage de \"bonnes pratiques\" de programmation Une conception simple, du refactoring, des tests unitaires, des tests fonctionnels Des acteurs diff\u00e9renci\u00e9s Coach, manager, tracker, d\u00e9veloppeur, testeur, client R\u00e8gles Programmation en bin\u00f4me, responsabilit\u00e9 collective du code, int\u00e9gration continue","title":"Fonctionnement"},{"location":"010-context/010-software-lifecycle/#avantages_2","text":"Qualit\u00e9 Maintenabilit\u00e9, Efficacit\u00e9 Adaptabilit\u00e9 Transparence Client int\u00e9gr\u00e9 Respect des objectifs Ambiance de travail","title":"Avantages"},{"location":"010-context/010-software-lifecycle/#inconvenients_2","text":"Langages : adapt\u00e9s pour des langages objets Projet de petits envergures Equipe r\u00e9duite, et devant \u00eatre tr\u00e8s comp\u00e9tente et soud\u00e9e Travail en bin\u00f4me Clients omnipr\u00e9sents","title":"Inconv\u00e9nients"},{"location":"010-context/010-software-lifecycle/#variantes","text":"La notion de besoin remplac\u00e9 par la notion de service D\u00e9coupage en Lots et en \u00eelots Reprise des valeurs et de la m\u00e9thodologie XP pour chacun de ces lots. D\u00e9coupage du projet en \u00eelots ind\u00e9pendants","title":"Variantes"},{"location":"010-context/010-software-lifecycle/#lotissement","text":"","title":"Lotissement"},{"location":"010-context/010-software-lifecycle/#conclusion","text":"","title":"Conclusion"},{"location":"010-context/010-software-lifecycle/#la-necessite-dune-methode-de-gestion","text":"Il n'y a pas de bonnes ou de mauvaises m\u00e9thodes Chaque projet a ses sp\u00e9cificit\u00e9s qui conduisent \u00e0 d\u00e9finir la m\u00e9thode la plus adapt\u00e9e (ou la moins mauvaise), qui r\u00e9sulte souvent du dosage subtil de plusieurs m\u00e9thodes.","title":"La n\u00e9cessit\u00e9 d'une m\u00e9thode de gestion"},{"location":"010-context/010-software-lifecycle/#etapes-paralleles-externes-au-projet","text":"","title":"\u00c9tapes parall\u00e8les / externes au projet"},{"location":"010-context/010-software-lifecycle/#le-transverse","text":"Gestion des environnements Donn\u00e9es de tests Administration des serveurs Mise en place du r\u00e9seau informatique Installation/Masterisation du parc informatique Le contr\u00f4le qualit\u00e9 Capacity planning Suivi du syst\u00e8me d\u00e9velopp\u00e9 ou en cours de d\u00e9veloppement","title":"Le transverse"},{"location":"010-context/010-software-lifecycle/#la-formation","text":"Formation des futurs utilisateurs de l\u2019application Mise en place d\u2019un environnement de formation Adaptation du projet par rapport aux premi\u00e8res remont\u00e9s Formation des futurs administrateurs de l\u2019application Prise de connaissance de l\u2019application Formation aux nouveaux outils pouvant \u00eatre mis en place etc.","title":"La formation"},{"location":"010-context/020-context-and-needs/","text":"Contexte de l'exploitation # Syst\u00e8mes informatiques # 80% de logiciel 20% de mat\u00e9riel Le mat\u00e9riel est consid\u00e9r\u00e9 relativement fiable La plupart des fonctionalit\u00e9s sont fournies par le logiciel Nature des l'industrie informatique # 5% de logiciels d\u00e9velopp\u00e9s from scratch 95% de projets existants repris et int\u00e9gr\u00e9s Enjeux principaux : R\u00e9utiliser Faire \u00e9voluer \u00c9tendre Adapter Maintenir R\u00e9organiser R\u00e9ussite des projets # R\u00e9ussite = Projet termin\u00e9 dans les temps, sans d\u00e9passement de budget Succes 29% Probl\u00e9matiques 52% Echec 19% Source Standish Group 2015 CHAOS report qui analyse de 50.000 projets \u00e0 travers le monde Notes: 16% de succ\u00e8s en 1994 La probabilit\u00e9 de succ\u00e8s d\u00e9croit avec la taille du projet # Petit (moins de 1M$) 70% Moyen 22% Grand (plus de 6M$) 11% Source Standish Group 2015 CHAOS report Causes des d\u00e9faillances - en g\u00e9n\u00e9ral # Risque n\u00b01 : Inaptitude du personnel # \u2013 Structuration de l'\u00e9quipe \u2013 Redistribution des r\u00f4les \u2013 Renforcement de l'encadrement \u2013 Formation, entraide, motivation Risque n\u00b02 : Pr\u00e9vision optimistes, sousestimation des budgets # Recoupement de plusieurs estimations d\u00e9taill\u00e9e des charges, des co\u00fbts et des planning Remise en cause des demandes D\u00e9veloppement incr\u00e9mental R\u00e9utilisation de logiciel Risque n\u00b03 : D\u00e9veloppement de logiciels impropres \u00e0 satisfaire les besoins # Analyse de l'organisation Analyse des missions Revue Prototypage R\u00e9daction anticip\u00e9e des manuels Risque n\u00b04 : D\u00e9veloppement de mauvaises interfaces utilisateurs # Analyse des taches Prototypage Prise en compte de l'utilisateur (fonction, comportement, charge de travail) Risque n\u00b05 : Perfectionnisme # Examen critique des sp\u00e9cifications Prototypage Calcul des retours sur investissement Risque n\u00b06 : Courant continu de modifications # Seuil d'acceptation des changements D\u00e9veloppement incr\u00e9mental Report des modifications en fin de projet Risque n\u00b07 : D\u00e9faillance des fournitures externes # Mise en concurrence Contr\u00f4le des r\u00e9f\u00e9rences Analyse de compatibilit\u00e9 Inspection et recette Risque n\u00b08 : D\u00e9faillance des travaux sous-trait\u00e9s # Contr\u00f4le des r\u00e9f\u00e9rences Audit de qualification Structure d'\u00e9quipe Risque n\u00b09 : D\u00e9faillance des performances en temps imm\u00e9diat # Simulation Essais comparatifs Mod\u00e9lisation, Prototypage Instrumentation, R\u00e9glages Risque n\u00b010 : Blocage sur les limites technologiques des plates-formages # Analyse technique V\u00e9rification \u00e0 priori des performances Analyse des co\u00fbts Causes des d\u00e9faillances dans le cloud # 34% entr\u00e9es utilisateur non pr\u00e9vues 32% timeouts 95% probl\u00e8mes dus aux m\u00eames 5 modules (37% des LOCs) Enseignements : Un petit nombre d\u2019erreurs sont \u00e0 l\u2019origine de la majorit\u00e9 des d\u00e9faillances Il faut traiter correctement les exceptions Il faut de meilleures proc\u00e9dures de tests Pannes # Exemple de la panne Amazon Web Services (2015) # Indisponibilit\u00e9 de 6 heures Source: probl\u00e8me dans la gestion des m\u00e9ta-donn\u00e9es dans DynamoDB (NoSQL) La d\u00e9faillance s\u2019est propag\u00e9e \u00e0 d\u2019autres services 2 des plus gros clients de AWS sont Amazon.com et Netflix Netflix a annonc\u00e9 ne pas avoir \u00e9t\u00e9 impact\u00e9 Une analyse des plaintes des consommateurs montrent une tr\u00e8s forte hausse pendant cette p\u00e9riode Cout d'une d\u00e9faillance # Amazon : panne de 45 minutes : perte estim\u00e9e \u00e0 4 M$ Skyset : ralentissement du serveur : 46 k$ par jour Les challenges de la modernisation des projets IT # Multitude d'outils et de langages H\u00e9t\u00e9rog\u00e9n\u00e9it\u00e9 des syst\u00e8mes, des outils et des r\u00e9seaux L\u2019exploitation IT doit s\u2019aligner sur les contraintes m\u00e9tiers et clients (24H/24 7/7) L\u2019automatisation est incontournable L\u2019automatisation participe grandement \u00e0 l'agilit\u00e9","title":"Contexte de l'exploitation"},{"location":"010-context/020-context-and-needs/#contexte-de-lexploitation","text":"","title":"Contexte de l'exploitation"},{"location":"010-context/020-context-and-needs/#systemes-informatiques","text":"80% de logiciel 20% de mat\u00e9riel Le mat\u00e9riel est consid\u00e9r\u00e9 relativement fiable La plupart des fonctionalit\u00e9s sont fournies par le logiciel","title":"Syst\u00e8mes informatiques"},{"location":"010-context/020-context-and-needs/#nature-des-lindustrie-informatique","text":"5% de logiciels d\u00e9velopp\u00e9s from scratch 95% de projets existants repris et int\u00e9gr\u00e9s Enjeux principaux : R\u00e9utiliser Faire \u00e9voluer \u00c9tendre Adapter Maintenir R\u00e9organiser","title":"Nature des l'industrie informatique"},{"location":"010-context/020-context-and-needs/#reussite-des-projets","text":"R\u00e9ussite = Projet termin\u00e9 dans les temps, sans d\u00e9passement de budget Succes 29% Probl\u00e9matiques 52% Echec 19% Source Standish Group 2015 CHAOS report qui analyse de 50.000 projets \u00e0 travers le monde Notes: 16% de succ\u00e8s en 1994","title":"R\u00e9ussite des projets"},{"location":"010-context/020-context-and-needs/#la-probabilite-de-succes-decroit-avec-la-taille-du-projet","text":"Petit (moins de 1M$) 70% Moyen 22% Grand (plus de 6M$) 11% Source Standish Group 2015 CHAOS report","title":"La probabilit\u00e9 de succ\u00e8s d\u00e9croit avec la taille du projet"},{"location":"010-context/020-context-and-needs/#causes-des-defaillances-en-general","text":"","title":"Causes des d\u00e9faillances - en g\u00e9n\u00e9ral"},{"location":"010-context/020-context-and-needs/#risque-n1-inaptitude-du-personnel","text":"\u2013 Structuration de l'\u00e9quipe \u2013 Redistribution des r\u00f4les \u2013 Renforcement de l'encadrement \u2013 Formation, entraide, motivation","title":"Risque n\u00b01 : Inaptitude du personnel"},{"location":"010-context/020-context-and-needs/#risque-n2-prevision-optimistes-sousestimation-des-budgets","text":"Recoupement de plusieurs estimations d\u00e9taill\u00e9e des charges, des co\u00fbts et des planning Remise en cause des demandes D\u00e9veloppement incr\u00e9mental R\u00e9utilisation de logiciel","title":"Risque n\u00b02 : Pr\u00e9vision optimistes, sousestimation des budgets"},{"location":"010-context/020-context-and-needs/#risque-n3-developpement-de-logiciels-impropres-a-satisfaire-les-besoins","text":"Analyse de l'organisation Analyse des missions Revue Prototypage R\u00e9daction anticip\u00e9e des manuels","title":"Risque n\u00b03 : D\u00e9veloppement de logiciels impropres \u00e0 satisfaire les besoins"},{"location":"010-context/020-context-and-needs/#risque-n4-developpement-de-mauvaises-interfaces-utilisateurs","text":"Analyse des taches Prototypage Prise en compte de l'utilisateur (fonction, comportement, charge de travail)","title":"Risque n\u00b04 : D\u00e9veloppement de mauvaises interfaces utilisateurs"},{"location":"010-context/020-context-and-needs/#risque-n5-perfectionnisme","text":"Examen critique des sp\u00e9cifications Prototypage Calcul des retours sur investissement","title":"Risque n\u00b05 : Perfectionnisme"},{"location":"010-context/020-context-and-needs/#risque-n6-courant-continu-de-modifications","text":"Seuil d'acceptation des changements D\u00e9veloppement incr\u00e9mental Report des modifications en fin de projet","title":"Risque n\u00b06 : Courant continu de modifications"},{"location":"010-context/020-context-and-needs/#risque-n7-defaillance-des-fournitures-externes","text":"Mise en concurrence Contr\u00f4le des r\u00e9f\u00e9rences Analyse de compatibilit\u00e9 Inspection et recette","title":"Risque n\u00b07 : D\u00e9faillance des fournitures externes"},{"location":"010-context/020-context-and-needs/#risque-n8-defaillance-des-travaux-sous-traites","text":"Contr\u00f4le des r\u00e9f\u00e9rences Audit de qualification Structure d'\u00e9quipe","title":"Risque n\u00b08 : D\u00e9faillance des travaux sous-trait\u00e9s"},{"location":"010-context/020-context-and-needs/#risque-n9-defaillance-des-performances-en-temps-immediat","text":"Simulation Essais comparatifs Mod\u00e9lisation, Prototypage Instrumentation, R\u00e9glages","title":"Risque n\u00b09 : D\u00e9faillance des performances en temps imm\u00e9diat"},{"location":"010-context/020-context-and-needs/#risque-n10-blocage-sur-les-limites-technologiques-des-plates-formages","text":"Analyse technique V\u00e9rification \u00e0 priori des performances Analyse des co\u00fbts","title":"Risque n\u00b010 : Blocage sur les limites technologiques des plates-formages"},{"location":"010-context/020-context-and-needs/#causes-des-defaillances-dans-le-cloud","text":"34% entr\u00e9es utilisateur non pr\u00e9vues 32% timeouts 95% probl\u00e8mes dus aux m\u00eames 5 modules (37% des LOCs) Enseignements : Un petit nombre d\u2019erreurs sont \u00e0 l\u2019origine de la majorit\u00e9 des d\u00e9faillances Il faut traiter correctement les exceptions Il faut de meilleures proc\u00e9dures de tests","title":"Causes des d\u00e9faillances dans le cloud"},{"location":"010-context/020-context-and-needs/#pannes","text":"","title":"Pannes"},{"location":"010-context/020-context-and-needs/#exemple-de-la-panne-amazon-web-services-2015","text":"Indisponibilit\u00e9 de 6 heures Source: probl\u00e8me dans la gestion des m\u00e9ta-donn\u00e9es dans DynamoDB (NoSQL) La d\u00e9faillance s\u2019est propag\u00e9e \u00e0 d\u2019autres services 2 des plus gros clients de AWS sont Amazon.com et Netflix Netflix a annonc\u00e9 ne pas avoir \u00e9t\u00e9 impact\u00e9 Une analyse des plaintes des consommateurs montrent une tr\u00e8s forte hausse pendant cette p\u00e9riode","title":"Exemple de la panne Amazon Web Services (2015)"},{"location":"010-context/020-context-and-needs/#cout-dune-defaillance","text":"Amazon : panne de 45 minutes : perte estim\u00e9e \u00e0 4 M$ Skyset : ralentissement du serveur : 46 k$ par jour","title":"Cout d'une d\u00e9faillance"},{"location":"010-context/020-context-and-needs/#les-challenges-de-la-modernisation-des-projets-it","text":"Multitude d'outils et de langages H\u00e9t\u00e9rog\u00e9n\u00e9it\u00e9 des syst\u00e8mes, des outils et des r\u00e9seaux L\u2019exploitation IT doit s\u2019aligner sur les contraintes m\u00e9tiers et clients (24H/24 7/7) L\u2019automatisation est incontournable L\u2019automatisation participe grandement \u00e0 l'agilit\u00e9","title":"Les challenges de la modernisation des projets IT"},{"location":"010-context/030-culture/","text":"Contexte culturel et technique # Logiciel libre (depuis 1980) # Quatre libert\u00e9s (d'apres la FSF) # Vous pouvez reprendre un programme existant et l\u2019ex\u00e9cuter comme vous le souhaitez, et \u00e0 toute fin Vous pouvez \u00e9tudier son fonctionnement, et le modifier comme vous le souhaitez pour votre ordinateur Vous pouvez redistribuer des copies que vous avez re\u00e7ues Vous pouvez distribuer des copies de version modifi\u00e9es pour donner \u00e0 toute la communaut\u00e9 une chance de profiter de vos modifications Cons\u00e9quences techniques # La libre redistribution du logiciel Le code source doit \u00eatre fourni ou \u00eatre accessible Les d\u00e9riv\u00e9s des \u0153uvres doivent \u00eatre permis L\u2019int\u00e9grit\u00e9 du code doit \u00eatre pr\u00e9serv\u00e9e Pas de discrimination entre les personnes ou les groupes Pas de discrimination entre les domaines d\u2019application La licence s\u2019applique sans d\u00e9pendre d\u2019autres contrats La licence ne doit pas \u00eatre propre \u00e0 un produit La licence d\u2019un logiciel ne doit pas s\u2019\u00e9tendre \u00e0 un autre La licence doit \u00eatre neutre technologiquement Cons\u00e9quences communautaires # Facilite l'apparition d'une communaut\u00e9 de personnes engag\u00e9es Pour l'usage... Pour l'\u00e9volution... Pour la formation... etc. Pose la question de l'organisation de ce communaut\u00e9 de do-ers Apparition des premiers outils de collaboration Le \"Big Data\" # Volume Vari\u00e9t\u00e9 Velocit\u00e9 (V\u00e9racit\u00e9) (Visualisation) Le \"cloud\" # D\u00e9finitions # Le cloud computing est l'acc\u00e8s via le r\u00e9seau, \u00e0 la demande et en libre-service, \u00e0 des ressources informatiques virtualis\u00e9es et mutualis\u00e9e (NIST) Caract\u00e9ristiques # Mat\u00e9riel, raccordements de r\u00e9seau et logiciels Ressources en libre-service Ouverture sur internet Mutualisation des ressources Paiement \u00e0 l'usage En r\u00e9sum\u00e9 # Le cloud c'est \"juste\" l'ordinateur de qqn d'autre ... qui met \u00e0 disposition un ensemble de ... trucs ? ... mais on ne sait ni o\u00f9, ni comment ces services existent physiquement ... et on peut les utiliser sans les poss\u00e9der.","title":"Contexte culturel et technique"},{"location":"010-context/030-culture/#contexte-culturel-et-technique","text":"","title":"Contexte culturel et technique"},{"location":"010-context/030-culture/#logiciel-libre-depuis-1980","text":"","title":"Logiciel libre (depuis 1980)"},{"location":"010-context/030-culture/#quatre-libertes-dapres-la-fsf","text":"Vous pouvez reprendre un programme existant et l\u2019ex\u00e9cuter comme vous le souhaitez, et \u00e0 toute fin Vous pouvez \u00e9tudier son fonctionnement, et le modifier comme vous le souhaitez pour votre ordinateur Vous pouvez redistribuer des copies que vous avez re\u00e7ues Vous pouvez distribuer des copies de version modifi\u00e9es pour donner \u00e0 toute la communaut\u00e9 une chance de profiter de vos modifications","title":"Quatre libert\u00e9s (d'apres la FSF)"},{"location":"010-context/030-culture/#consequences-techniques","text":"La libre redistribution du logiciel Le code source doit \u00eatre fourni ou \u00eatre accessible Les d\u00e9riv\u00e9s des \u0153uvres doivent \u00eatre permis L\u2019int\u00e9grit\u00e9 du code doit \u00eatre pr\u00e9serv\u00e9e Pas de discrimination entre les personnes ou les groupes Pas de discrimination entre les domaines d\u2019application La licence s\u2019applique sans d\u00e9pendre d\u2019autres contrats La licence ne doit pas \u00eatre propre \u00e0 un produit La licence d\u2019un logiciel ne doit pas s\u2019\u00e9tendre \u00e0 un autre La licence doit \u00eatre neutre technologiquement","title":"Cons\u00e9quences techniques"},{"location":"010-context/030-culture/#consequences-communautaires","text":"Facilite l'apparition d'une communaut\u00e9 de personnes engag\u00e9es Pour l'usage... Pour l'\u00e9volution... Pour la formation... etc. Pose la question de l'organisation de ce communaut\u00e9 de do-ers Apparition des premiers outils de collaboration","title":"Cons\u00e9quences communautaires"},{"location":"010-context/030-culture/#le-big-data","text":"Volume Vari\u00e9t\u00e9 Velocit\u00e9 (V\u00e9racit\u00e9) (Visualisation)","title":"Le \"Big Data\""},{"location":"010-context/030-culture/#le-cloud","text":"","title":"Le \"cloud\""},{"location":"010-context/030-culture/#definitions","text":"Le cloud computing est l'acc\u00e8s via le r\u00e9seau, \u00e0 la demande et en libre-service, \u00e0 des ressources informatiques virtualis\u00e9es et mutualis\u00e9e (NIST)","title":"D\u00e9finitions"},{"location":"010-context/030-culture/#caracteristiques","text":"Mat\u00e9riel, raccordements de r\u00e9seau et logiciels Ressources en libre-service Ouverture sur internet Mutualisation des ressources Paiement \u00e0 l'usage","title":"Caract\u00e9ristiques"},{"location":"010-context/030-culture/#en-resume","text":"Le cloud c'est \"juste\" l'ordinateur de qqn d'autre ... qui met \u00e0 disposition un ensemble de ... trucs ? ... mais on ne sait ni o\u00f9, ni comment ces services existent physiquement ... et on peut les utiliser sans les poss\u00e9der.","title":"En r\u00e9sum\u00e9"},{"location":"010-context/040-ci-and-devops/","text":"Integration continue et DevOps # Deux m\u00e9tiers antagoniste # Populations # Dev \u00c9quipes de d\u00e9veloppeurs logiciels Ajoute ou corrige des fonctionalit\u00e9s Ops \u00c9quipes en charge de la mise en production des produits Responsable du maintien en condition op\u00e9rationnelles Indicateurs de performances # Dev : modifier \u00c0 moindre cout Rapidement & facilement le p\u00e9rim\u00e8tre fonctionnel Ops : garantir Le p\u00e9rim\u00e8tre du logiciel La stabilit\u00e9 du systeme La qualit\u00e9 Integration continue # L'automatisation comme devise # Dans les d\u00e9veloppements Dans les tests Dans la livraison Dans la mise en production Dans la s\u00e9curit\u00e9 etc. Un processus continu # Int\u00e9gration continue (CI : continuous integration) \u00e0 chaque modification apport\u00e9e par d\u00e9veloppeur le logiciel est reconstruit ( build ) et test\u00e9 Livraison continue (CD : continuous delivery) \u00e0 chaque test positif production automatis\u00e9e des livrables (packages, executables, etc.) mise \u00e0 disposition au public cible sur les plates-formes D\u00e9ploiement continu (CD : continuous deployment) \u00e0 chaque test positif ou livraison mise en production sur les serveurs C'est la philosophie au coeur de l'approche DevOps Infrastructure as Code # Tout est descriptible sous forme de texte Configuration des logiciels, mais aussi des syst\u00e8mes et des r\u00e9seaux Le d\u00e9pot de code devient le \"centre de contr\u00f4le\" de l'IT La SEULE r\u00e9f\u00e9rence du syst\u00e8me Le SEUL endroit ou l'on agit (cr\u00e9ation, changement, destruction) pour TOUS les environnement Tout est tracable et versionn\u00e9 On peut revenir en arri\u00e8re si besoin On peut travailler sur des variantes sans risque On parle parfois aussi de #GitOps Un changement de culture ? # Un mouvement de fond # Adopt\u00e9 rapidement par les grands acteurs de l'industrie : Google, Netflix, Mozilla, Facebook, etc. Etat des lieux 41% des entreprises ont adopt\u00e9 (au moins en partie) l\u2019approche DevOps 75% des entreprises \u00e9tudient les technologies en lien avec le DevOps Augmentation de 10% de devops entre 2016 => 2017 M\u00e9tier le plus recherch\u00e9 en 2018 et 2019 Impact de l\u2019approche DevOps sur le MTTR (Mean Time to Recover) Sans DevOps : 29 heures Avec DevOps : 7 heures Sondage par le site Dzone.com (2016) Une s\u00e9rie de nouveaux m\u00e9tiers d\u00fbs \u00e0 l'automatisation # Ancien m\u00e9tier(s) Nouveaux m\u00e9tier(s) D\u00e9veloppeurs + \u00c9quipe IT DevOps ou GitOps S\u00e9curit\u00e9 (DevSec + SecOps) DevSecOps Data Science Data Engineers ou DataOps ou MLOps Note : les anciens m\u00e9tiers ne disparaissent pas pour autant ! Exemples : The Netflix Simian Army # Contexte # Netflix utilise Amazon AWS comme fournisseur de ressources informatique Netflix ne gere pas ses propres ressources materielles La disponibilit\u00e9 de ses services est fondamentale Les clients de Netflix ne peuvent accepter des interruptions deservice fr\u00e9quentes Netflix a peu de contr\u00f4le sur la fiabilit\u00e9 des ressources qui lui sont fournies par Amazon La disponibilite doit \u00eatre assur\u00e9e au niveau logiciel Netflix Tech Blog: Simian Army Etat d'esprit # The best way to avoid failure is to fail constantly Une arm\u00e9e de \u00ab singes testeurs \u00bb Casser le service en permanence Laisser le service se r\u00e9tablir automatiquement Lire \u00ab Anti-Fragile \u00bb de Nassim Nicholas Taleb Outils et processus # The Chaos Monkey De mani\u00e8re r\u00e9guli\u00e8re tue un des serveurs de Netflix The Latency Monkey Augmente artificiellement la latence entre client et serveur The Chaos Gorilla Simule la disparition de tous les serveurs dans une r\u00e9gion du monde","title":"Integration continue et DevOps"},{"location":"010-context/040-ci-and-devops/#integration-continue-et-devops","text":"","title":"Integration continue et DevOps"},{"location":"010-context/040-ci-and-devops/#deux-metiers-antagoniste","text":"","title":"Deux m\u00e9tiers antagoniste"},{"location":"010-context/040-ci-and-devops/#populations","text":"Dev \u00c9quipes de d\u00e9veloppeurs logiciels Ajoute ou corrige des fonctionalit\u00e9s Ops \u00c9quipes en charge de la mise en production des produits Responsable du maintien en condition op\u00e9rationnelles","title":"Populations"},{"location":"010-context/040-ci-and-devops/#indicateurs-de-performances","text":"Dev : modifier \u00c0 moindre cout Rapidement & facilement le p\u00e9rim\u00e8tre fonctionnel Ops : garantir Le p\u00e9rim\u00e8tre du logiciel La stabilit\u00e9 du systeme La qualit\u00e9","title":"Indicateurs de performances"},{"location":"010-context/040-ci-and-devops/#integration-continue","text":"","title":"Integration continue"},{"location":"010-context/040-ci-and-devops/#lautomatisation-comme-devise","text":"Dans les d\u00e9veloppements Dans les tests Dans la livraison Dans la mise en production Dans la s\u00e9curit\u00e9 etc.","title":"L'automatisation comme devise"},{"location":"010-context/040-ci-and-devops/#un-processus-continu","text":"Int\u00e9gration continue (CI : continuous integration) \u00e0 chaque modification apport\u00e9e par d\u00e9veloppeur le logiciel est reconstruit ( build ) et test\u00e9 Livraison continue (CD : continuous delivery) \u00e0 chaque test positif production automatis\u00e9e des livrables (packages, executables, etc.) mise \u00e0 disposition au public cible sur les plates-formes D\u00e9ploiement continu (CD : continuous deployment) \u00e0 chaque test positif ou livraison mise en production sur les serveurs C'est la philosophie au coeur de l'approche DevOps","title":"Un processus continu"},{"location":"010-context/040-ci-and-devops/#infrastructure-as-code","text":"Tout est descriptible sous forme de texte Configuration des logiciels, mais aussi des syst\u00e8mes et des r\u00e9seaux Le d\u00e9pot de code devient le \"centre de contr\u00f4le\" de l'IT La SEULE r\u00e9f\u00e9rence du syst\u00e8me Le SEUL endroit ou l'on agit (cr\u00e9ation, changement, destruction) pour TOUS les environnement Tout est tracable et versionn\u00e9 On peut revenir en arri\u00e8re si besoin On peut travailler sur des variantes sans risque On parle parfois aussi de #GitOps","title":"Infrastructure as Code"},{"location":"010-context/040-ci-and-devops/#un-changement-de-culture","text":"","title":"Un changement de culture ?"},{"location":"010-context/040-ci-and-devops/#un-mouvement-de-fond","text":"Adopt\u00e9 rapidement par les grands acteurs de l'industrie : Google, Netflix, Mozilla, Facebook, etc. Etat des lieux 41% des entreprises ont adopt\u00e9 (au moins en partie) l\u2019approche DevOps 75% des entreprises \u00e9tudient les technologies en lien avec le DevOps Augmentation de 10% de devops entre 2016 => 2017 M\u00e9tier le plus recherch\u00e9 en 2018 et 2019 Impact de l\u2019approche DevOps sur le MTTR (Mean Time to Recover) Sans DevOps : 29 heures Avec DevOps : 7 heures Sondage par le site Dzone.com (2016)","title":"Un mouvement de fond"},{"location":"010-context/040-ci-and-devops/#une-serie-de-nouveaux-metiers-dus-a-lautomatisation","text":"Ancien m\u00e9tier(s) Nouveaux m\u00e9tier(s) D\u00e9veloppeurs + \u00c9quipe IT DevOps ou GitOps S\u00e9curit\u00e9 (DevSec + SecOps) DevSecOps Data Science Data Engineers ou DataOps ou MLOps Note : les anciens m\u00e9tiers ne disparaissent pas pour autant !","title":"Une s\u00e9rie de nouveaux m\u00e9tiers d\u00fbs \u00e0 l'automatisation"},{"location":"010-context/040-ci-and-devops/#exemples-the-netflix-simian-army","text":"","title":"Exemples : The Netflix Simian Army"},{"location":"010-context/040-ci-and-devops/#contexte","text":"Netflix utilise Amazon AWS comme fournisseur de ressources informatique Netflix ne gere pas ses propres ressources materielles La disponibilit\u00e9 de ses services est fondamentale Les clients de Netflix ne peuvent accepter des interruptions deservice fr\u00e9quentes Netflix a peu de contr\u00f4le sur la fiabilit\u00e9 des ressources qui lui sont fournies par Amazon La disponibilite doit \u00eatre assur\u00e9e au niveau logiciel Netflix Tech Blog: Simian Army","title":"Contexte"},{"location":"010-context/040-ci-and-devops/#etat-desprit","text":"The best way to avoid failure is to fail constantly Une arm\u00e9e de \u00ab singes testeurs \u00bb Casser le service en permanence Laisser le service se r\u00e9tablir automatiquement Lire \u00ab Anti-Fragile \u00bb de Nassim Nicholas Taleb","title":"Etat d'esprit"},{"location":"010-context/040-ci-and-devops/#outils-et-processus","text":"The Chaos Monkey De mani\u00e8re r\u00e9guli\u00e8re tue un des serveurs de Netflix The Latency Monkey Augmente artificiellement la latence entre client et serveur The Chaos Gorilla Simule la disparition de tous les serveurs dans une r\u00e9gion du monde","title":"Outils et processus"},{"location":"020-concept-and-stakes/","text":"Concept & enjeux #","title":"Concept & enjeux"},{"location":"020-concept-and-stakes/#concept-enjeux","text":"","title":"Concept &amp; enjeux"},{"location":"020-concept-and-stakes/010-definition/","text":"D\u00e9finition # Usine logicielle # Outils et processus ... pour g\u00e8rer la fabrication (au sens large) du produit ... l'organisation y est d\u00e9coup\u00e9e comme une cha\u00eene de production ... o\u00f9 les t\u00e2ches r\u00e9p\u00e9titives seront automatis\u00e9es ex: le lancement routinier de la compilation, ex: l'ex\u00e9cution des tests unitaires (et des autres types de tests) ex: le d\u00e9ploiement. Objectifs # Objectifs Am\u00e9liorer le processus de production Tester plus, am\u00e9liorer la qualit\u00e9 Livrer plus t\u00f4t, plus souvent, plus sereinement R\u00e9duire les anomalies Cela implique de maitriser Les d\u00e9veloppements Les tests Les versions Les livraisons La qualit\u00e9 Et donc la mise en oeuvre de \"bonnes pratiques\" et l'automatisation des pratiques Vue d'ensemble # Cot\u00e9 organisationnel # dessiner sch\u00e9ma au tableau Cot\u00e9 technique #","title":"D\u00e9finition"},{"location":"020-concept-and-stakes/010-definition/#definition","text":"","title":"D\u00e9finition"},{"location":"020-concept-and-stakes/010-definition/#usine-logicielle","text":"Outils et processus ... pour g\u00e8rer la fabrication (au sens large) du produit ... l'organisation y est d\u00e9coup\u00e9e comme une cha\u00eene de production ... o\u00f9 les t\u00e2ches r\u00e9p\u00e9titives seront automatis\u00e9es ex: le lancement routinier de la compilation, ex: l'ex\u00e9cution des tests unitaires (et des autres types de tests) ex: le d\u00e9ploiement.","title":"Usine logicielle"},{"location":"020-concept-and-stakes/010-definition/#objectifs","text":"Objectifs Am\u00e9liorer le processus de production Tester plus, am\u00e9liorer la qualit\u00e9 Livrer plus t\u00f4t, plus souvent, plus sereinement R\u00e9duire les anomalies Cela implique de maitriser Les d\u00e9veloppements Les tests Les versions Les livraisons La qualit\u00e9 Et donc la mise en oeuvre de \"bonnes pratiques\" et l'automatisation des pratiques","title":"Objectifs"},{"location":"020-concept-and-stakes/010-definition/#vue-densemble","text":"","title":"Vue d'ensemble"},{"location":"020-concept-and-stakes/010-definition/#cote-organisationnel","text":"dessiner sch\u00e9ma au tableau","title":"Cot\u00e9 organisationnel"},{"location":"020-concept-and-stakes/010-definition/#cote-technique","text":"","title":"Cot\u00e9 technique"},{"location":"020-concept-and-stakes/020-components/","text":"Architecture et composants # Sur un plan organisationnel # Documentation et partage de connaissance # MediaWiki Dokkuwiki Confluence ... Forum et partage d'opinions # phpBB bbPress eXo ... Fichiers et documents partag\u00e9s # FTP WebDAV Dropbox GoogleDrive iCloud NextCloud (Owncloud) Organisation des t\u00e2ches / activit\u00e9s / objectifs # Mantis Trac Jira Bugzilla Flyspray ... Visio-conf\u00e9rence # OpenMeeting bigbluebutton Appear.in Meet.Jitsi ... Kanban # Trello Framaboard ... Et aussi # Timetracking Calendrier Syst\u00e8me d'alertes ... Sur un plan technique # Editeur de code # Visual Studio Code Eclipse Vim ... Stockage et gestion des versions # Subversion https://subversion.apache.org/ Git https://git-scm.com/ Mercurial ... Gestion des d\u00e9pendances # apt / yum / etc. cmake Build # GNU Make https://www.gnu.org/software/make/ Maven https://maven.apache.org/ Gradle https://gradle.org Audit automatis\u00e9 du code # *-lint SonarQube https://www.sonarqube.org/ Code Climate ($) https://codeclimate.com/ Application Performance Monitoring # Raygun ($) https://raygun.com/ New Relic https://newrelic.com Containers # LXC https://linuxcontainers.org/fr/ Docker https://www.docker.com/ Rocket CRI Podman Service discovery & configuration # Consul (HashiCorp) https://www.consul.io/ Etcd https://etcd.io/ Repository Manager # Artifactory https://jfrog.com/artifactory/ Nexus Infrastructure Deployment # Vagrant (HashiCorp) https://www.vagrantup.com/ Terraform (HashiCorp) https://www.terraform.io/ Pulumi https://www.pulumi.com Provisioning # Puppet https://puppet.com/ Chef https://www.chef.io Ansible (RedHat) https://www.ansible.com/ Saltstack https://www.saltstack.com/ Containers Orchestrators # Kubernetes https://kubernetes.io/fr/ Swarm https://docs.docker.com/engine/swarm/ Dokku http://dokku.viewdocs.io/dokku/ Heroku https://www.heroku.com/ Monitoring d'infrastructure # Snort https://www.snort.org/ Monit https://mmonit.com/ Nagios https://www.nagios.org/ Prometheus https://prometheus.io/ Ganglia http://ganglia.info/ Test plan automation # TestRails https://www.gurock.com/testrail/ KiwiTCMS https://kiwitcms.org/ Infrastructure testing # ServerSpec https://serverspec.org/ TestInfra https://testinfra.readthedocs.io/en/latest/ Goss https://goss.rocks/ CI/CD Pipelines # Jenkins https://www.jenkins.io/ Gitlab CI https://docs.gitlab.com/ee/ci/ Github Actions https://github.com/features/actions Travis https://travis-ci.org/","title":"Architecture et composants"},{"location":"020-concept-and-stakes/020-components/#architecture-et-composants","text":"","title":"Architecture et composants"},{"location":"020-concept-and-stakes/020-components/#sur-un-plan-organisationnel","text":"","title":"Sur un plan organisationnel"},{"location":"020-concept-and-stakes/020-components/#documentation-et-partage-de-connaissance","text":"MediaWiki Dokkuwiki Confluence ...","title":"Documentation et partage de connaissance"},{"location":"020-concept-and-stakes/020-components/#forum-et-partage-dopinions","text":"phpBB bbPress eXo ...","title":"Forum et partage d'opinions"},{"location":"020-concept-and-stakes/020-components/#fichiers-et-documents-partages","text":"FTP WebDAV Dropbox GoogleDrive iCloud NextCloud (Owncloud)","title":"Fichiers et documents partag\u00e9s"},{"location":"020-concept-and-stakes/020-components/#organisation-des-taches-activites-objectifs","text":"Mantis Trac Jira Bugzilla Flyspray ...","title":"Organisation des t\u00e2ches / activit\u00e9s / objectifs"},{"location":"020-concept-and-stakes/020-components/#visio-conference","text":"OpenMeeting bigbluebutton Appear.in Meet.Jitsi ...","title":"Visio-conf\u00e9rence"},{"location":"020-concept-and-stakes/020-components/#kanban","text":"Trello Framaboard ...","title":"Kanban"},{"location":"020-concept-and-stakes/020-components/#et-aussi","text":"Timetracking Calendrier Syst\u00e8me d'alertes ...","title":"Et aussi"},{"location":"020-concept-and-stakes/020-components/#sur-un-plan-technique","text":"","title":"Sur un plan technique"},{"location":"020-concept-and-stakes/020-components/#editeur-de-code","text":"Visual Studio Code Eclipse Vim ...","title":"Editeur de code"},{"location":"020-concept-and-stakes/020-components/#stockage-et-gestion-des-versions","text":"Subversion https://subversion.apache.org/ Git https://git-scm.com/ Mercurial ...","title":"Stockage et gestion des versions"},{"location":"020-concept-and-stakes/020-components/#gestion-des-dependances","text":"apt / yum / etc. cmake","title":"Gestion des d\u00e9pendances"},{"location":"020-concept-and-stakes/020-components/#build","text":"GNU Make https://www.gnu.org/software/make/ Maven https://maven.apache.org/ Gradle https://gradle.org","title":"Build"},{"location":"020-concept-and-stakes/020-components/#audit-automatise-du-code","text":"*-lint SonarQube https://www.sonarqube.org/ Code Climate ($) https://codeclimate.com/","title":"Audit automatis\u00e9 du code"},{"location":"020-concept-and-stakes/020-components/#application-performance-monitoring","text":"Raygun ($) https://raygun.com/ New Relic https://newrelic.com","title":"Application Performance Monitoring"},{"location":"020-concept-and-stakes/020-components/#containers","text":"LXC https://linuxcontainers.org/fr/ Docker https://www.docker.com/ Rocket CRI Podman","title":"Containers"},{"location":"020-concept-and-stakes/020-components/#service-discovery-configuration","text":"Consul (HashiCorp) https://www.consul.io/ Etcd https://etcd.io/","title":"Service discovery &amp; configuration"},{"location":"020-concept-and-stakes/020-components/#repository-manager","text":"Artifactory https://jfrog.com/artifactory/ Nexus","title":"Repository Manager"},{"location":"020-concept-and-stakes/020-components/#infrastructure-deployment","text":"Vagrant (HashiCorp) https://www.vagrantup.com/ Terraform (HashiCorp) https://www.terraform.io/ Pulumi https://www.pulumi.com","title":"Infrastructure Deployment"},{"location":"020-concept-and-stakes/020-components/#provisioning","text":"Puppet https://puppet.com/ Chef https://www.chef.io Ansible (RedHat) https://www.ansible.com/ Saltstack https://www.saltstack.com/","title":"Provisioning"},{"location":"020-concept-and-stakes/020-components/#containers-orchestrators","text":"Kubernetes https://kubernetes.io/fr/ Swarm https://docs.docker.com/engine/swarm/ Dokku http://dokku.viewdocs.io/dokku/ Heroku https://www.heroku.com/","title":"Containers Orchestrators"},{"location":"020-concept-and-stakes/020-components/#monitoring-dinfrastructure","text":"Snort https://www.snort.org/ Monit https://mmonit.com/ Nagios https://www.nagios.org/ Prometheus https://prometheus.io/ Ganglia http://ganglia.info/","title":"Monitoring d'infrastructure"},{"location":"020-concept-and-stakes/020-components/#test-plan-automation","text":"TestRails https://www.gurock.com/testrail/ KiwiTCMS https://kiwitcms.org/","title":"Test plan automation"},{"location":"020-concept-and-stakes/020-components/#infrastructure-testing","text":"ServerSpec https://serverspec.org/ TestInfra https://testinfra.readthedocs.io/en/latest/ Goss https://goss.rocks/","title":"Infrastructure testing"},{"location":"020-concept-and-stakes/020-components/#cicd-pipelines","text":"Jenkins https://www.jenkins.io/ Gitlab CI https://docs.gitlab.com/ee/ci/ Github Actions https://github.com/features/actions Travis https://travis-ci.org/","title":"CI/CD Pipelines"},{"location":"020-concept-and-stakes/030-full-integrated/","text":"Des plates-formes integr\u00e9es # Plate-formes en ligne # 1999 : Sourceforge.net 2004 : Basecamp 2008 : Bitbucket (Atlassian) 2008 : Github 2011 : BerliOS (plus en activit\u00e9) 2011 : Gitlab Outils open-source # FusionForge Savane Berlios Trac Redmine Gitea Tuleap","title":"Des plates-formes integr\u00e9es"},{"location":"020-concept-and-stakes/030-full-integrated/#des-plates-formes-integrees","text":"","title":"Des plates-formes integr\u00e9es"},{"location":"020-concept-and-stakes/030-full-integrated/#plate-formes-en-ligne","text":"1999 : Sourceforge.net 2004 : Basecamp 2008 : Bitbucket (Atlassian) 2008 : Github 2011 : BerliOS (plus en activit\u00e9) 2011 : Gitlab","title":"Plate-formes en ligne"},{"location":"020-concept-and-stakes/030-full-integrated/#outils-open-source","text":"FusionForge Savane Berlios Trac Redmine Gitea Tuleap","title":"Outils open-source"},{"location":"020-concept-and-stakes/090-comparison/","text":"Outils collaboratifs de gestion de projet # contribution de tous entre tous acc\u00e8s \u00e0 la connaissance interne existante ramener la valeur dans l\u2019entreprise Centralis\u00e9 vs distribu\u00e9 # R\u00e9partition des taches entre : responsable \u00e9ditorial, \u00e9quipe de d\u00e9veloppement, graphistes Un espace de travail commun (planning carnet de bord, maquettes, etc.) Outils: FTP, google docs, boxnet, etc Objet # Partage d'informations Partage de connaissances : Partage d'opinions, Partage de ressources Organisation du travail en fonction des objectifs Taches, activit\u00e9s et objectifs : R\u00e9unions et points de discussion avec les acteurs du projet Suivi et am\u00e9nagement, pilotage Rapport du travail accompli et \u00e0 faire","title":"Outils collaboratifs de gestion de projet"},{"location":"020-concept-and-stakes/090-comparison/#outils-collaboratifs-de-gestion-de-projet","text":"contribution de tous entre tous acc\u00e8s \u00e0 la connaissance interne existante ramener la valeur dans l\u2019entreprise","title":"Outils collaboratifs de gestion de projet"},{"location":"020-concept-and-stakes/090-comparison/#centralise-vs-distribue","text":"R\u00e9partition des taches entre : responsable \u00e9ditorial, \u00e9quipe de d\u00e9veloppement, graphistes Un espace de travail commun (planning carnet de bord, maquettes, etc.) Outils: FTP, google docs, boxnet, etc","title":"Centralis\u00e9 vs distribu\u00e9"},{"location":"020-concept-and-stakes/090-comparison/#objet","text":"Partage d'informations Partage de connaissances : Partage d'opinions, Partage de ressources Organisation du travail en fonction des objectifs Taches, activit\u00e9s et objectifs : R\u00e9unions et points de discussion avec les acteurs du projet Suivi et am\u00e9nagement, pilotage Rapport du travail accompli et \u00e0 faire","title":"Objet"},{"location":"030-setup/","text":"","title":"Index"},{"location":"040-mise-en-oeuvre/","text":"Mise en oeuvre #","title":"Mise en oeuvre"},{"location":"040-mise-en-oeuvre/#mise-en-oeuvre","text":"","title":"Mise en oeuvre"},{"location":"040-mise-en-oeuvre/010-docker/","text":"Utilisation de docker #","title":"Utilisation de docker"},{"location":"040-mise-en-oeuvre/010-docker/#utilisation-de-docker","text":"","title":"Utilisation de docker"},{"location":"040-mise-en-oeuvre/020-components/","text":"Composant par composant #","title":"Composant par composant"},{"location":"040-mise-en-oeuvre/020-components/#composant-par-composant","text":"","title":"Composant par composant"},{"location":"040-mise-en-oeuvre/030-integrated/","text":"Outils integr\u00e9s #","title":"Outils integr\u00e9s"},{"location":"040-mise-en-oeuvre/030-integrated/#outils-integres","text":"","title":"Outils integr\u00e9s"}]}